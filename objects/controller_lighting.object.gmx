<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Ambient Lighting
global.ambient_light = 0.02; //ambient_light = 0.02;

global.light_surface = surface_create(view_wview, view_hview);

application_surface_draw_enable(false);

uniform_ambient = shader_get_uniform(shd_multiply, "u_fAmbient");
sampler_light = shader_get_sampler_index(shd_multiply, "u_sLight");

global.gotkey = false
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>shader_set(shd_multiply);
shader_set_uniform_f(uniform_ambient, global.ambient_light);
if(!surface_exists(global.light_surface))
{
    global.light_surface = surface_create(view_wview, view_hview);
}
texture_set_stage(sampler_light, surface_get_texture(global.light_surface));
draw_surface(application_surface, 0, 0);
shader_reset();

if (global.gotkey == true)
{
    draw_sprite(spr_key,0,x + 50,y + 45)
  
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>surface_set_target(global.light_surface);

draw_clear_alpha(c_black, 1);

draw_set_blend_mode(bm_add);    // Look brighter when more than 1 light object stacks

if (instance_exists(obj_player1))
{

if (global.flashlightOn == true)
{

draw_sprite_ext(spr_flashlightArmTest, 0, obj_player1.x - view_xview, obj_player1.y - view_yview, 1, 1, 
                point_direction(obj_player1.x, obj_player1.y, mouse_x, mouse_y), c_white, 1);
}

var i;
for (i = 0; i &lt; instance_number(obj_box1); i += 1)
   {
   
   enemy[i] = instance_find(obj_box1,i).x;
   
   //eyes
   if (point_direction(instance_find(obj_box1,i).x,instance_find(obj_box1,i).y,obj_player1.x,obj_player1.y) &gt; 270 ||
   point_direction(instance_find(obj_box1,i).x,instance_find(obj_box1,i).y,obj_player1.x,obj_player1.y) &lt; 90)
   {
        draw_sprite_ext(spr_eyes, 0, instance_find(obj_box1,i).x - view_xview, instance_find(obj_box1,i).y - view_yview, 1, 1, 
              0, c_white, 1);   
    }
    else
    {
        draw_sprite_ext(spr_eyes, 1, instance_find(obj_box1,i).x - view_xview, instance_find(obj_box1,i).y - view_yview, 1, 1, 
              0, c_white, 1);   
    }
   
    
  
   
   }
  
   
   var i;
   for (i = 0; i &lt; instance_number(obj_lamp); i += 1)
   {
   
    enemy[i] = instance_find(obj_lamp,i).x;
  
        //lamp spr_test_lightLamp
        draw_sprite_ext(spr_lamp_light, 0, instance_find(obj_lamp,i).x - view_xview, instance_find(obj_lamp,i).y - view_yview, 1, 1, 
              0, c_white, 1);   
    }
    
              
draw_sprite_ext(spr_haze, 0, obj_player1.x - view_xview, obj_player1.y - view_yview, 1, 1, 
                0, c_white, 1);  
            }    

draw_set_blend_mode(bm_normal);
surface_reset_target();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
