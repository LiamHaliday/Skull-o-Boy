<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_small_Player</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-20</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Global Variables


playerSpeed = 7.5;

global.gotkey = false

godTime = 5
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//image_angle = point_direction(x, y, mouse_x, mouse_y);


// Player Movement
// [W]
if (keyboard_check(ord('W'))) &amp;&amp; place_free(x, y - playerSpeed) { y -= playerSpeed; image_speed = 0.1; global.isWalking = true; };
if (keyboard_check_released(ord('W'))) { global.isWalking = false; }    // Set Idle
// [A]
if (keyboard_check(ord('A'))) &amp;&amp; place_free(x - playerSpeed, y) { x -= playerSpeed; image_speed = 0.1; global.isWalking = true; };
if (keyboard_check_released(ord('A'))) { global.isWalking = false; }    // Set Idle
// [S]
if (keyboard_check(ord('S'))) &amp;&amp; place_free(x, y + playerSpeed) { y += playerSpeed; image_speed = 0.1; global.isWalking = true; };
if (keyboard_check_released(ord('S'))) { global.isWalking = false; }    // Set Idle
// [D]
if (keyboard_check(ord('D'))) &amp;&amp; place_free(x + playerSpeed, y) { x += playerSpeed; image_speed = 0.1; global.isWalking = true; };
if (keyboard_check_released(ord('D'))) { global.isWalking = false; }    // Set Idle

//god mode
if(global.playerGod == true)
{
image_blend = make_colour_hsv(250, 0, random(255)); 

 if (godTime == 0)
 {
    image_blend = c_white;
    global.playerGod = false
    godTime = 5
 }
    godTime -= 0.1
 }

// Player Idle
if (global.isWalking == false){
    image_index = 0;
}

// Flashlight Toggle

   if (mouse_check_button_pressed(mb_left))
   {
        //global.flashlightAlpha = 0;
        
        if ( global.flashlightOn == true)
        {
            audio_play_sound(flashlightON, 15, false);
            global.flashlightOn = false; 
                
        }
        else
        {
            audio_play_sound(flashlightOFF, 14, false);
            global.flashlightOn = true;
        }
   }
if (point_direction(x,y,mouse_x,mouse_y) &lt; 180)
 {
    sprite_index = spr_back_small_p  
     if (point_direction(x,y,mouse_x,mouse_y) &gt; 270 ||
     point_direction(x,y,mouse_x,mouse_y) &lt; 90)
     {
        image_xscale = 1
    }
     else
     {
        image_xscale = -1
    }
 }
 else
 {
 sprite_index = spr_small_Player
    if (point_direction(x,y,mouse_x,mouse_y) &gt; 270 ||
    point_direction(x,y,mouse_x,mouse_y) &lt; 90)
    {
     image_xscale = -1
    }
    else
    {
     image_xscale = 1
    } 
 }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_collisionObject">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(global.gotkey == true)
{

    room_goto_next();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_box1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.playerGod = false
{
    audio_play_sound(stab, 11, false);
    global.playerHit = true;
    global.playerGod = true;
    global.playerLives -= 1;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_exit">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(global.gotkey == true)
{
    room_goto(GameRoom1);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
